************ Executing Bandit with rules B101,B108 ingored (B101: assert_used, B108: hardcoded_tmp_directory) ************
/home/dimi/work/fred/knowledge_flow_backend/.venv/bin/uv run bandit \
	-r app \
	-s B101,B108 \
	--baseline /home/dimi/work/fred/knowledge_flow_backend/.baseline/bandit-baseline.json
Working... ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 0:00:00
Run started:2025-08-04 07:15:17.074785

Test results:
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: app/core/stores/prompts/duckdb_prompt_store.py::

-- Candidate Issues --
          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:82:34
          81	        with self.store._connect() as conn:
          82	            rows = conn.execute(f"SELECT * FROM {self._table()} WHERE owner_id = ?", [user]).fetchall()
          83	        return [self._deserialize(row) for row in rows]
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:87:33
          86	        with self.store._connect() as conn:
          87	            row = conn.execute(f"SELECT * FROM {self._table()} WHERE id = ?", [prompt_id]).fetchone()
          88	        if not row:
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:99:27
          98	        with self.store._connect() as conn:
          99	            conn.execute(f"INSERT INTO {self._table()} VALUES (?, ?, ?, ?, ?, ?, ?, ?)", self._serialize(prompt))
          100	        return prompt
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:106:20
          105	            conn.execute(
          106	                f"""
          107	                UPDATE {self._table()}
          108	                SET name = ?, content = ?, description = ?, tags = ?, owner_id = ?, created_at = ?, updated_at = ?
          109	                WHERE id = ?
          110	                """,
          111	                (
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:126:36
          125	        with self.store._connect() as conn:
          126	            result = conn.execute(f"DELETE FROM {self._table()} WHERE id = ?", [prompt_id])
          127	        if result.rowcount == 0:
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:133:20
          132	            rows = conn.execute(
          133	                f"""
          134	                SELECT * FROM {self._table()}
          135	                WHERE json_contains(tags, to_json(?))
          136	                """,
          137	                [tag_id],
          


--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: app/core/stores/prompts/duckdb_prompt_store.py::

-- Candidate Issues --
          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:82:34
          81	        with self.store._connect() as conn:
          82	            rows = conn.execute(f"SELECT * FROM {self._table()} WHERE owner_id = ?", [user]).fetchall()
          83	        return [self._deserialize(row) for row in rows]
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:87:33
          86	        with self.store._connect() as conn:
          87	            row = conn.execute(f"SELECT * FROM {self._table()} WHERE id = ?", [prompt_id]).fetchone()
          88	        if not row:
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:99:27
          98	        with self.store._connect() as conn:
          99	            conn.execute(f"INSERT INTO {self._table()} VALUES (?, ?, ?, ?, ?, ?, ?, ?)", self._serialize(prompt))
          100	        return prompt
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:106:20
          105	            conn.execute(
          106	                f"""
          107	                UPDATE {self._table()}
          108	                SET name = ?, content = ?, description = ?, tags = ?, owner_id = ?, created_at = ?, updated_at = ?
          109	                WHERE id = ?
          110	                """,
          111	                (
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:126:36
          125	        with self.store._connect() as conn:
          126	            result = conn.execute(f"DELETE FROM {self._table()} WHERE id = ?", [prompt_id])
          127	        if result.rowcount == 0:
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:133:20
          132	            rows = conn.execute(
          133	                f"""
          134	                SELECT * FROM {self._table()}
          135	                WHERE json_contains(tags, to_json(?))
          136	                """,
          137	                [tag_id],
          


--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: app/core/stores/prompts/duckdb_prompt_store.py::

-- Candidate Issues --
          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:82:34
          81	        with self.store._connect() as conn:
          82	            rows = conn.execute(f"SELECT * FROM {self._table()} WHERE owner_id = ?", [user]).fetchall()
          83	        return [self._deserialize(row) for row in rows]
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:87:33
          86	        with self.store._connect() as conn:
          87	            row = conn.execute(f"SELECT * FROM {self._table()} WHERE id = ?", [prompt_id]).fetchone()
          88	        if not row:
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:99:27
          98	        with self.store._connect() as conn:
          99	            conn.execute(f"INSERT INTO {self._table()} VALUES (?, ?, ?, ?, ?, ?, ?, ?)", self._serialize(prompt))
          100	        return prompt
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:106:20
          105	            conn.execute(
          106	                f"""
          107	                UPDATE {self._table()}
          108	                SET name = ?, content = ?, description = ?, tags = ?, owner_id = ?, created_at = ?, updated_at = ?
          109	                WHERE id = ?
          110	                """,
          111	                (
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:126:36
          125	        with self.store._connect() as conn:
          126	            result = conn.execute(f"DELETE FROM {self._table()} WHERE id = ?", [prompt_id])
          127	        if result.rowcount == 0:
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:133:20
          132	            rows = conn.execute(
          133	                f"""
          134	                SELECT * FROM {self._table()}
          135	                WHERE json_contains(tags, to_json(?))
          136	                """,
          137	                [tag_id],
          


--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: app/core/stores/prompts/duckdb_prompt_store.py::

-- Candidate Issues --
          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:82:34
          81	        with self.store._connect() as conn:
          82	            rows = conn.execute(f"SELECT * FROM {self._table()} WHERE owner_id = ?", [user]).fetchall()
          83	        return [self._deserialize(row) for row in rows]
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:87:33
          86	        with self.store._connect() as conn:
          87	            row = conn.execute(f"SELECT * FROM {self._table()} WHERE id = ?", [prompt_id]).fetchone()
          88	        if not row:
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:99:27
          98	        with self.store._connect() as conn:
          99	            conn.execute(f"INSERT INTO {self._table()} VALUES (?, ?, ?, ?, ?, ?, ?, ?)", self._serialize(prompt))
          100	        return prompt
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:106:20
          105	            conn.execute(
          106	                f"""
          107	                UPDATE {self._table()}
          108	                SET name = ?, content = ?, description = ?, tags = ?, owner_id = ?, created_at = ?, updated_at = ?
          109	                WHERE id = ?
          110	                """,
          111	                (
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:126:36
          125	        with self.store._connect() as conn:
          126	            result = conn.execute(f"DELETE FROM {self._table()} WHERE id = ?", [prompt_id])
          127	        if result.rowcount == 0:
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:133:20
          132	            rows = conn.execute(
          133	                f"""
          134	                SELECT * FROM {self._table()}
          135	                WHERE json_contains(tags, to_json(?))
          136	                """,
          137	                [tag_id],
          


--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: app/core/stores/prompts/duckdb_prompt_store.py::

-- Candidate Issues --
          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:82:34
          81	        with self.store._connect() as conn:
          82	            rows = conn.execute(f"SELECT * FROM {self._table()} WHERE owner_id = ?", [user]).fetchall()
          83	        return [self._deserialize(row) for row in rows]
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:87:33
          86	        with self.store._connect() as conn:
          87	            row = conn.execute(f"SELECT * FROM {self._table()} WHERE id = ?", [prompt_id]).fetchone()
          88	        if not row:
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:99:27
          98	        with self.store._connect() as conn:
          99	            conn.execute(f"INSERT INTO {self._table()} VALUES (?, ?, ?, ?, ?, ?, ?, ?)", self._serialize(prompt))
          100	        return prompt
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:106:20
          105	            conn.execute(
          106	                f"""
          107	                UPDATE {self._table()}
          108	                SET name = ?, content = ?, description = ?, tags = ?, owner_id = ?, created_at = ?, updated_at = ?
          109	                WHERE id = ?
          110	                """,
          111	                (
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:126:36
          125	        with self.store._connect() as conn:
          126	            result = conn.execute(f"DELETE FROM {self._table()} WHERE id = ?", [prompt_id])
          127	        if result.rowcount == 0:
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:133:20
          132	            rows = conn.execute(
          133	                f"""
          134	                SELECT * FROM {self._table()}
          135	                WHERE json_contains(tags, to_json(?))
          136	                """,
          137	                [tag_id],
          


--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: app/core/stores/prompts/duckdb_prompt_store.py::

-- Candidate Issues --
          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:82:34
          81	        with self.store._connect() as conn:
          82	            rows = conn.execute(f"SELECT * FROM {self._table()} WHERE owner_id = ?", [user]).fetchall()
          83	        return [self._deserialize(row) for row in rows]
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:87:33
          86	        with self.store._connect() as conn:
          87	            row = conn.execute(f"SELECT * FROM {self._table()} WHERE id = ?", [prompt_id]).fetchone()
          88	        if not row:
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:99:27
          98	        with self.store._connect() as conn:
          99	            conn.execute(f"INSERT INTO {self._table()} VALUES (?, ?, ?, ?, ?, ?, ?, ?)", self._serialize(prompt))
          100	        return prompt
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:106:20
          105	            conn.execute(
          106	                f"""
          107	                UPDATE {self._table()}
          108	                SET name = ?, content = ?, description = ?, tags = ?, owner_id = ?, created_at = ?, updated_at = ?
          109	                WHERE id = ?
          110	                """,
          111	                (
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:126:36
          125	        with self.store._connect() as conn:
          126	            result = conn.execute(f"DELETE FROM {self._table()} WHERE id = ?", [prompt_id])
          127	        if result.rowcount == 0:
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/prompts/duckdb_prompt_store.py:133:20
          132	            rows = conn.execute(
          133	                f"""
          134	                SELECT * FROM {self._table()}
          135	                WHERE json_contains(tags, to_json(?))
          136	                """,
          137	                [tag_id],
          


--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: app/core/stores/tags/duckdb_tag_store.py::

-- Candidate Issues --
          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:51:38
          50	            with self.store._connect() as conn:
          51	                rows = conn.execute(f"SELECT * FROM {self._table()} WHERE owner_id = ?", [user.uid]).fetchall()
          52	            return [self._deserialize(row) for row in rows]
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:59:33
          58	        with self.store._connect() as conn:
          59	            row = conn.execute(f"SELECT * FROM {self._table()} WHERE id = ?", [tag_id]).fetchone()
          60	        if not row:
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:73:31
          72	            with self.store._connect() as conn:
          73	                conn.execute(f"INSERT INTO {self._table()} VALUES (?, ?, ?, ?, ?, ?, ?)", self._serialize(tag))
          74	            logger.info(f"[TAGS] Created tag '{tag.id}' for user '{tag.owner_id}'")
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:85:24
          84	                conn.execute(
          85	                    f"""
          86	                    UPDATE {self._table()}
          87	                    SET created_at = ?, updated_at = ?, owner_id = ?, name = ?, description = ?, type = ?
          88	                    WHERE id = ?
          89	                    """,
          90	                    (tag.created_at, tag.updated_at, tag.owner_id, tag.name, tag.description, tag.type.value, tag_id),
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:101:40
          100	            with self.store._connect() as conn:
          101	                result = conn.execute(f"DELETE FROM {self._table()} WHERE id = ?", [tag_id])
          102	            if result.rowcount == 0:
          


--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: app/core/stores/tags/duckdb_tag_store.py::

-- Candidate Issues --
          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:51:38
          50	            with self.store._connect() as conn:
          51	                rows = conn.execute(f"SELECT * FROM {self._table()} WHERE owner_id = ?", [user.uid]).fetchall()
          52	            return [self._deserialize(row) for row in rows]
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:59:33
          58	        with self.store._connect() as conn:
          59	            row = conn.execute(f"SELECT * FROM {self._table()} WHERE id = ?", [tag_id]).fetchone()
          60	        if not row:
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:73:31
          72	            with self.store._connect() as conn:
          73	                conn.execute(f"INSERT INTO {self._table()} VALUES (?, ?, ?, ?, ?, ?, ?)", self._serialize(tag))
          74	            logger.info(f"[TAGS] Created tag '{tag.id}' for user '{tag.owner_id}'")
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:85:24
          84	                conn.execute(
          85	                    f"""
          86	                    UPDATE {self._table()}
          87	                    SET created_at = ?, updated_at = ?, owner_id = ?, name = ?, description = ?, type = ?
          88	                    WHERE id = ?
          89	                    """,
          90	                    (tag.created_at, tag.updated_at, tag.owner_id, tag.name, tag.description, tag.type.value, tag_id),
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:101:40
          100	            with self.store._connect() as conn:
          101	                result = conn.execute(f"DELETE FROM {self._table()} WHERE id = ?", [tag_id])
          102	            if result.rowcount == 0:
          


--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: app/core/stores/tags/duckdb_tag_store.py::

-- Candidate Issues --
          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:51:38
          50	            with self.store._connect() as conn:
          51	                rows = conn.execute(f"SELECT * FROM {self._table()} WHERE owner_id = ?", [user.uid]).fetchall()
          52	            return [self._deserialize(row) for row in rows]
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:59:33
          58	        with self.store._connect() as conn:
          59	            row = conn.execute(f"SELECT * FROM {self._table()} WHERE id = ?", [tag_id]).fetchone()
          60	        if not row:
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:73:31
          72	            with self.store._connect() as conn:
          73	                conn.execute(f"INSERT INTO {self._table()} VALUES (?, ?, ?, ?, ?, ?, ?)", self._serialize(tag))
          74	            logger.info(f"[TAGS] Created tag '{tag.id}' for user '{tag.owner_id}'")
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:85:24
          84	                conn.execute(
          85	                    f"""
          86	                    UPDATE {self._table()}
          87	                    SET created_at = ?, updated_at = ?, owner_id = ?, name = ?, description = ?, type = ?
          88	                    WHERE id = ?
          89	                    """,
          90	                    (tag.created_at, tag.updated_at, tag.owner_id, tag.name, tag.description, tag.type.value, tag_id),
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:101:40
          100	            with self.store._connect() as conn:
          101	                result = conn.execute(f"DELETE FROM {self._table()} WHERE id = ?", [tag_id])
          102	            if result.rowcount == 0:
          


--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: app/core/stores/tags/duckdb_tag_store.py::

-- Candidate Issues --
          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:51:38
          50	            with self.store._connect() as conn:
          51	                rows = conn.execute(f"SELECT * FROM {self._table()} WHERE owner_id = ?", [user.uid]).fetchall()
          52	            return [self._deserialize(row) for row in rows]
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:59:33
          58	        with self.store._connect() as conn:
          59	            row = conn.execute(f"SELECT * FROM {self._table()} WHERE id = ?", [tag_id]).fetchone()
          60	        if not row:
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:73:31
          72	            with self.store._connect() as conn:
          73	                conn.execute(f"INSERT INTO {self._table()} VALUES (?, ?, ?, ?, ?, ?, ?)", self._serialize(tag))
          74	            logger.info(f"[TAGS] Created tag '{tag.id}' for user '{tag.owner_id}'")
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:85:24
          84	                conn.execute(
          85	                    f"""
          86	                    UPDATE {self._table()}
          87	                    SET created_at = ?, updated_at = ?, owner_id = ?, name = ?, description = ?, type = ?
          88	                    WHERE id = ?
          89	                    """,
          90	                    (tag.created_at, tag.updated_at, tag.owner_id, tag.name, tag.description, tag.type.value, tag_id),
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:101:40
          100	            with self.store._connect() as conn:
          101	                result = conn.execute(f"DELETE FROM {self._table()} WHERE id = ?", [tag_id])
          102	            if result.rowcount == 0:
          


--------------------------------------------------
>> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
   Severity: Medium   Confidence: Medium
   CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
   More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
   Location: app/core/stores/tags/duckdb_tag_store.py::

-- Candidate Issues --
          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:51:38
          50	            with self.store._connect() as conn:
          51	                rows = conn.execute(f"SELECT * FROM {self._table()} WHERE owner_id = ?", [user.uid]).fetchall()
          52	            return [self._deserialize(row) for row in rows]
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:59:33
          58	        with self.store._connect() as conn:
          59	            row = conn.execute(f"SELECT * FROM {self._table()} WHERE id = ?", [tag_id]).fetchone()
          60	        if not row:
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:73:31
          72	            with self.store._connect() as conn:
          73	                conn.execute(f"INSERT INTO {self._table()} VALUES (?, ?, ?, ?, ?, ?, ?)", self._serialize(tag))
          74	            logger.info(f"[TAGS] Created tag '{tag.id}' for user '{tag.owner_id}'")
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:85:24
          84	                conn.execute(
          85	                    f"""
          86	                    UPDATE {self._table()}
          87	                    SET created_at = ?, updated_at = ?, owner_id = ?, name = ?, description = ?, type = ?
          88	                    WHERE id = ?
          89	                    """,
          90	                    (tag.created_at, tag.updated_at, tag.owner_id, tag.name, tag.description, tag.type.value, tag_id),
          


          >> Issue: [B608:hardcoded_sql_expressions] Possible SQL injection vector through string-based query construction.
             Severity: Medium   Confidence: Medium
             CWE: CWE-89 (https://cwe.mitre.org/data/definitions/89.html)
             More Info: https://bandit.readthedocs.io/en/1.8.5/plugins/b608_hardcoded_sql_expressions.html
             Location: app/core/stores/tags/duckdb_tag_store.py:101:40
          100	            with self.store._connect() as conn:
          101	                result = conn.execute(f"DELETE FROM {self._table()} WHERE id = ?", [tag_id])
          102	            if result.rowcount == 0:
          


--------------------------------------------------

Code scanned:
	Total lines of code: 7652
	Total lines skipped (#nosec): 0
	Total potential issues skipped due to specifically being disabled (e.g., #nosec BXXX): 0

Run metrics:
	Total issues (by severity):
		Undefined: 0
		Low: 6
		Medium: 27
		High: 0
	Total issues (by confidence):
		Undefined: 0
		Low: 3
		Medium: 24
		High: 6
Files skipped (0):
