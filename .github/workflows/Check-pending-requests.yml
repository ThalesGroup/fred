name: Check pending request

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]

jobs:
  # Job to detect changes
  detect-changes:
    runs-on: ubuntu-latest
    # Those outputs are variables that will be shared to the check
    outputs:
      frontend: ${{ steps.changes.outputs.frontend }}
      agentic: ${{ steps.changes.outputs.agentic }}
      knowledge-flow: ${{ steps.changes.outputs.knowledge-flow }}
      deploy-chart: ${{ steps.changes.outputs.deploy-chart }}
      fred-core: ${{ steps.changes.outputs.fred-core }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Enough needed to detect changes
      
      - name: Detect changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            frontend:
              - 'frontend/**'
            agentic:
              - 'agentic_backend/**'
            deploy-chart:
              - 'deploy/charts/**'
            knowledge-flow:
              - 'knowledge_flow_backend/**'
            fred-core:
              - 'fred-core/**'

  # Job to run code quality checks on the entire repository
  code-quality:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.agentic == 'true' || needs.detect-changes.outputs.knowledge-flow == 'true' || needs.detect-changes.outputs.fred-core == 'true'
    strategy:
      matrix:
        directory: [agentic_backend, knowledge_flow_backend, fred-core]
        check: 
          - lint
          - format
          - sast
          # - detect-secret # todo: baseline not working, fix it and re enable this check
          - type-check
        include:
          # Agentic backend runs when agentic or fred-core changes
          - directory: agentic_backend
            condition: needs.detect-changes.outputs.agentic == 'true' || needs.detect-changes.outputs.fred-core == 'true'
          # Knowledge flow backend runs when knowledge-flow or fred-core changes  
          - directory: knowledge_flow_backend
            condition: needs.detect-changes.outputs.knowledge-flow == 'true' || needs.detect-changes.outputs.fred-core == 'true'
          # Fred core runs when fred-core changes
          - directory: fred-core
            condition: needs.detect-changes.outputs.fred-core == 'true'
    name: Code Quality - ${{ matrix.directory }} - ${{ matrix.check }}
    
    steps:
      - uses: actions/checkout@v4
        if: ${{ matrix.condition }}
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Setup Python environment
        if: ${{ matrix.condition }}
        uses: ./.github/actions/setup-python-env
        with:
          working-directory: ${{ matrix.directory }}
      
      - name: Run ${{ matrix.check }}
        if: ${{ matrix.condition }}
        run: |
          cd ${{ matrix.directory }}/
          make ${{ matrix.check }}
        env:
          UV: uv

  # Job to check the frontend
  frontend-checks:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.13.0'

      - name: Frontend build
        run: |
          cd frontend/
          make build
  
      - name: Frontend run
        run: |
          cd frontend/
          timeout 5s make run || true

  # Job to check helm charts
  deploy-charts-checks:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.deploy-chart == 'true'

    steps:
      - name: Checkout charts
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Check chart - Fred
        run: |
          helm template fred deploy/charts/fred

  # Job to check agentic backend
  agentic-backend-checks:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.agentic == 'true' || needs.detect-changes.outputs.fred-core == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Setup Python environment
        uses: ./.github/actions/setup-python-env
        with:
          working-directory: agentic_backend
      
      
      - name: Test backend startup
        run: |
          cd agentic_backend/
          timeout 5 make run || true
  
  # Job for knownledge-flow
  knowledge-flow-backend-checks:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.knowledge-flow == 'true' || needs.detect-changes.outputs.fred-core == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Setup Python environment
        uses: ./.github/actions/setup-python-env
        with:
          working-directory: knowledge_flow_backend
      
      
      - name: Build and test
        run: |
          cd knowledge_flow_backend/
          make build

  # Job to check OpenAPI spec drift when backends or frontend change
  openapi-drift-check:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.agentic == 'true' || needs.detect-changes.outputs.knowledge-flow == 'true' || needs.detect-changes.outputs.frontend == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.13.0'
      
      - name: Setup Python for backends
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.8'

      - name: Setup agentic backend dependencies
        if: needs.detect-changes.outputs.agentic == 'true' || needs.detect-changes.outputs.frontend == 'true'
        run: |
          cd agentic_backend/
          make dev

      - name: Setup knowledge-flow backend dependencies  
        if: needs.detect-changes.outputs.knowledge-flow == 'true' || needs.detect-changes.outputs.frontend == 'true'
        run: |
          cd knowledge_flow_backend/
          make dev

      - name: Backup current generated files
        run: |
          mkdir -p /tmp/openapi-backup
          cp -f frontend/src/slices/agentic/agenticOpenApi.ts /tmp/openapi-backup/ 2>/dev/null || true
          cp -f frontend/src/slices/knowledgeFlow/knowledgeFlowOpenApi.ts /tmp/openapi-backup/ 2>/dev/null || true

      - name: Regenerate agentic OpenAPI slice
        if: needs.detect-changes.outputs.agentic == 'true' || needs.detect-changes.outputs.frontend == 'true'
        run: |
          cd frontend/
          make update-agentic-api

      - name: Regenerate knowledge-flow OpenAPI slice
        if: needs.detect-changes.outputs.knowledge-flow == 'true' || needs.detect-changes.outputs.frontend == 'true'
        run: |
          cd frontend/
          make update-knowledge-flow-api

      - name: Check for OpenAPI spec drift
        run: |
          echo "Checking for differences in generated OpenAPI files..."
          DRIFT_DETECTED=false
          
          if [ "${{ needs.detect-changes.outputs.agentic }}" == "true" ] || [ "${{ needs.detect-changes.outputs.frontend }}" == "true" ]; then
            if ! diff -q /tmp/openapi-backup/agenticOpenApi.ts frontend/src/slices/agentic/agenticOpenApi.ts > /dev/null 2>&1; then
              echo "❌ DRIFT DETECTED: agentic OpenAPI slice has changed but wasn't updated in the PR"
              echo "Please run 'make update-agentic-api' in frontend/ and commit the changes"
              DRIFT_DETECTED=true
            else
              echo "✅ Agentic OpenAPI slice is up to date"
            fi
          fi
          
          if [ "${{ needs.detect-changes.outputs.knowledge-flow }}" == "true" ] || [ "${{ needs.detect-changes.outputs.frontend }}" == "true" ]; then
            if ! diff -q /tmp/openapi-backup/knowledgeFlowOpenApi.ts frontend/src/slices/knowledgeFlow/knowledgeFlowOpenApi.ts > /dev/null 2>&1; then
              echo "❌ DRIFT DETECTED: knowledge-flow OpenAPI slice has changed but wasn't updated in the PR"
              echo "Please run 'make update-knowledge-flow-api' in frontend/ and commit the changes"
              DRIFT_DETECTED=true
            else
              echo "✅ Knowledge-flow OpenAPI slice is up to date"
            fi
          fi
          
          if [ "$DRIFT_DETECTED" == "true" ]; then
            echo ""
            echo "Backend API changes detected that require frontend slice regeneration."
            echo "This ensures the frontend stays in sync with backend API changes."
            exit 1
          fi
          
          echo "✅ No OpenAPI drift detected - all slices are up to date"