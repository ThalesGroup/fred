# -----------------------------------------------------------------------------
# BUILDER
# -----------------------------------------------------------------------------
FROM mirror.gcr.io/python:3.12.8-slim AS builder

# Set the poetry env
ENV POETRY_VIRTUALENVS_CREATE=true
ENV POETRY_VIRTUALENVS_IN_PROJECT=true
ENV POETRY_CACHE_DIR=/tmp/poetry_cache

# Copy project files
COPY agentic_backend/pyproject.toml agentic_backend/uv.lock* /app/
COPY fred-core /fred-core

# Move to workdir
WORKDIR /app

# Install poetry and python dependancies
RUN pip install poetry==1.7.1 --root-user-action=ignore && \
    poetry install

# -----------------------------------------------------------------------------
# RUNTIME
# -----------------------------------------------------------------------------
FROM mirror.gcr.io/python:3.12.8-slim AS runtime

ARG USER_NAME=fred-user
ARG USER_ID=1000
ARG GROUP_ID=1000

# # Install dependencies
# RUN apt-get update && \
#     apt-get install -y apt-transport-https ca-certificates gnupg curl unzip

# # Install gcloud-cli
# RUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg && \
#     echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \
#     apt-get update && apt-get -y install google-cloud-cli google-cloud-cli-gke-gcloud-auth-plugin

# # Install AWS CLI v2
# RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
#     unzip awscliv2.zip && \
#     ./aws/install && \
#     rm -rf awscliv2.zip aws

# Setup user
RUN groupadd -g ${GROUP_ID} ${USER_NAME} && \
    useradd -u ${USER_ID} -g ${GROUP_ID} -m ${USER_NAME}

# Change user
USER ${USER_NAME}

# Copy source from builder
COPY --from=builder --chown=${USER_ID}:${GROUP_ID} /app /app
COPY --from=builder --chown=${USER_ID}:${GROUP_ID} /fred-core /fred-core

# Move to workdir
WORKDIR /app

# Activate the virtualenv
ENV PATH="/app/.venv/bin:$PATH"

# Expose Fast API default port
EXPOSE 8000

# Run the python app
ENTRYPOINT ["python", "app/main.py"]
CMD ["--server.configurationPath", "/app/config/configuration.yaml", "--server.baseUrlPath", "/fred"]