# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

app:
  name: "Agentic Backend"
  base_url: "/agentic/v1"
  address: "127.0.0.1"
  port: 8000
  log_level: "info"
  reload: false
  reload_dir: "."
security:
  m2m:
    enabled: false
    client_id: "agentic"
    realm_url: "http://app-keycloak:8080/realms/app"
  user:
    enabled: false
    client_id: "app"
    realm_url: "http://app-keycloak:8080/realms/app"
  authorized_origins:
    - "http://localhost:5173"
frontend_settings:
  feature_flags:
    # If true activate the backend and frontend modules in charge of K8
    # and frugality monitoring
    enableK8Features: false
    # If true activate support for an electronic warfare demonstration
    enableElecWarfare: false
  properties:
    logoName: "fred"
    siteDisplayName: "Fred Academy"
ai:
  # In production  activate the configuration persistence mechanism
  # that allow users to create/update agents at runtime and change
  # their configuration without redeploying the application.
  # Developers: you may prefer to set this to true to trust only your static configuration
  use_static_config_only: false

  # Number of past exchanges to restore when initializing an agent session
  # This setting is used to limit the amount of historical context
  # that is loaded into the agent at the beginning of a session. It typically occur after a restart of the application
  # or when an agent session is re-initialized for any reason.
  agentic_restore_max_exchanges: 20

  # Maximum number of agents that cached in memory for faster access (uses LRU eviction policy)
  max_concurrent_agents: 128

  knowledge_flow_url: "http://localhost:8111/knowledge-flow/v1"
  # Timeout settings for the client
  timeout:
    connect: 5 # Time to wait for a connection in seconds
    read: 15 # Time to wait for a response in seconds
  default_chat_model:
    # Required in .env:
    # - OPENAI_API_KEY
    provider: "openai"
    name: "gpt-4o"
    settings:
      temperature: 0.0
      max_retries: 2
      request_timeout: 30
  recursion:
    recursion_limit: 40 # Number or max recursion use by the agents while using the chat_model
  agents:
    - name: "Echo"
      type: "agent"
      class_path: "agentic_backend.academy.00-echo.echo.Echo"
      enabled: true
    - name: "Responder"
      type: "agent"
      class_path: "agentic_backend.academy.01-llm-responder.llm-responder.Responder"
      enabled: true
    - name: "DualModelResponder"
      type: "agent"
      class_path: "agentic_backend.academy.02-dual-model-responder.dual-model-responder.DualModelResponder"
      enabled: true
    - name: "AssetResponder"
      type: "agent"
      class_path: "agentic_backend.academy.03_asset_responder.asset_responder.AssetResponder"
      enabled: true
      chat_model: {}
    - name: "SlideMaker"
      type: "agent"
      class_path: "agentic_backend.academy.04_slide_maker.slide_maker.SlideMaker"
      enabled: true
    - name: "GpsAgent"
      type: "agent"
      role: "Academy sample GPS agent"
      enabled: true
    - name: "MiniRagExpert"
      type: "agent"
      class_path: "agentic_backend.academy.06_simple_leader.mini_rag_expert.MiniRagExpert"
      enabled: true
    - name: "MiniDataExpert"
      type: "agent"
      class_path: "agentic_backend.academy.06_simple_leader.mini_data_expert.MiniDataExpert"
      enabled: true
    - name: "MiniLlmOrchestrator"
      type: "leader"
      class_path: "agentic_backend.academy.06_simple_leader.mini_llm_orchestrator.MiniLLMOrchestrator"
      enabled: true
    - name: "Georges"
      type: "agent"
      class_path: "agentic_backend.agents.generalist.generalist_expert.Georges"
      enabled: true
    - name: "Sage"
      type: "agent"
      class_path: "agentic_backend.agents.statistics.statistics_expert.Sage"
      enabled: true

mcp:
  servers:
    - name: "mcp-knowledge-flow-mcp-tabular"
      transport: "streamable_http"
      url: "http://localhost:8111/knowledge-flow/v1/mcp-tabular"
      sse_read_timeout: 2000
      auth_mode: "user_token"
    - name: "mcp-knowledge-flow-opensearch-ops"
      transport: "streamable_http"
      url: "http://localhost:8111/knowledge-flow/v1/mcp-opensearch-ops"
      sse_read_timeout: 2000
      auth_mode: "user_token"
    - name: "mcp-kubernetes-server"
      transport: "streamable_http"
      url: "http://localhost:8081/mcp"
      sse_read_timeout: 2000
      auth_mode: "user_token"
    - name: "mcp-atlassian-jira-server"
      transport: "streamable_http"
      url: "http://localhost:8885/mcp"
      sse_read_timeout: 2000
      auth_mode: "no_token"

storage:
  postgres:
    host: localhost
    port: 5432
    database: fred
    username: admin
  opensearch:
    host: https://localhost:9200
    secure: true
    verify_certs: false
    username: admin
  feedback_store:
    type: "duckdb"
    duckdb_path: "~/.fred/agentic/feedback.duckdb"
  agent_store:
    type: "duckdb"
    duckdb_path: "~/.fred/agentic/agent.duckdb"
  session_store:
    type: "duckdb"
    duckdb_path: "~/.fred/agentic/session.duckdb"
  history_store:
    type: "duckdb"
    duckdb_path: "~/.fred/agentic/history.duckdb"
  kpi_store:
    type: "log"
    level: "INFO"
