# -----------------------------------------------------------------------------
# Backend development image
# -----------------------------------------------------------------------------
FROM mirror.gcr.io/python:3.12.8-slim

ARG USER_NAME=fred-user
ARG USER_ID=1000
ARG GROUP_ID=1000

# Install dependencies
RUN apt-get update && \
    apt-get install -y git

# # Install dependencies
# RUN apt-get update && \
#     apt-get install -y apt-transport-https ca-certificates gnupg curl unzip

# # Install AWS CLI v2
# RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && \
#     unzip awscliv2.zip && \
#     ./aws/install && \
#     rm -rf awscliv2.zip aws

# # Install gcloud-cli
# RUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | gpg --dearmor -o /usr/share/keyrings/cloud.google.gpg && \
#     echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \
#     apt-get update && apt-get -y install google-cloud-cli google-cloud-cli-gke-gcloud-auth-plugin

# Copy project files
COPY .. /app

# Setup user
RUN groupadd -g ${GROUP_ID} ${USER_NAME} && \
    useradd -u ${USER_ID} -g ${GROUP_ID} -m ${USER_NAME} && \
    mkdir /opt/python && \
    chown -R ${USER_ID}:${GROUP_ID} /app /opt/python

# Change user
USER ${USER_NAME}

# Set the python virtual env into docker image
ENV VIRTUAL_ENV=/opt/python/venv
ENV POETRY_CACHE_DIR=/tmp/poetry_cache
ENV OPENAI_API_KEY=<MUST_BE_DEFINED>

# Move to workdir
WORKDIR /app

# Create python virtual env
RUN python -m venv ${VIRTUAL_ENV}

# Activate the virtualenv
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Install poetry and python dependancies
RUN pip install poetry==1.7.1 && \
    poetry install && \
    rm -rf $POETRY_CACHE_DIR

# Expose Fast API default port
EXPOSE 8000

# Run the python app
ENTRYPOINT ["python", "fred/main.py"]
CMD ["--server.configurationPath", "/app/config/configuration.yaml", "--server.baseUrlPath", "/fred"]