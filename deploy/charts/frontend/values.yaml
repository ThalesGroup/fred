applicationName: fred-frontend

replicaCount: 1

image:
  repository: ghcr.io/thalesgroup/fred-agent/frontend
  tag: "v0.0.5"
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: "gitlab-registry-creds"

serviceAccount:
  enabled: true
  name: fred-frontend
  annotations: {}
  labels: {}
  automount: true
  rbac:
    enabled: true
    permissions:
    # Permissions at namespace level
      namespaced:
      - apiGroups: [""]
        resources: ["pods", "configmaps", "secrets"]
        verbs: ["get", "list", "watch"]
      - apiGroups: ["apps"]
        resources: ["deployments", "replicasets"]
        verbs: ["get", "list", "watch", "create", "update", "patch"]
      - apiGroups: [""]
        resources: ["events"]
        verbs: ["create"]
    
      # Permissions at cluster level
      cluster:
      - apiGroups: [""]
        resources: ["nodes"]
        verbs: ["get", "list", "watch"]

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  hosts:
    - host: fred.dev.local
      paths:
        - path: /
  tls:
    - secretName: fred-frontend-crt
      hosts:
        - fred.dev.local

config:
  backendUrlApi: "https://agentic-backend.dev.fred.thalesgroup.com"
  backendUrlKnowledge: "https://knowledge-flow-backend.dev.fred.thalesgroup.com"
  websocketUrl: "ws://agentic-backend.dev.fred.thalesgroup.com/fred/chatbot/query"

env:
  - name: VITE_ALLOWED_HOSTS
    value: "fred.dev"
  - name: VITE_BACKEND_URL_KNOWLEDGE
    value: "http://knowledge-flow-backend.dev.fred.thalesgroup.com"
  - name: VITE_USE_AUTH
    value: "true"

oidc:
  enabled: true
  config:
    realm: "fred"
    authServerUrl: "https://idp.dev.fred.thalesgroup.com/"
    clientId: "app"

feedback_storage:
  type: local
  minio_endpoint: "localhost:9000"
  minio_bucket_name: "fred-feedback"
  minio_secure: false

resources: {}
podAnnotations: {}