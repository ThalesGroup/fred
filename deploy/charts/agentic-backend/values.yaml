# Default values for backend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

applicationName: agentic-backend

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: registry.thalesdigital.io/tsn/innovation/projects/fred/agentic_backend
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 0.1

imagePullSecrets:
  - name: "gitlab-registry-creds"

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  # className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: agentic-backend.dev.fred.thalesgroup.com
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after "resources:".
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: 80
readinessProbe:
  httpGet:
    path: /
    port: 80

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

baseUrlPath: /fred

config:
  frontend_settings:
    feature_flags:
      # If true acuivate the backend and frontend modules in charge of K8 
      # and frugality monitoring
      enableK8Features: true
      # If true activate support for an electronic warfare demonstration
      enableElecWarfare: false
    properties:
      logoName: "fred"

  database:
    type: csv
    csv_files:
      # Can be absolute paths or relative paths to the main
      energy_mix: './services/cluster_consumption/data/simulated_energy_mix.csv'
      carbon_footprint: './services/cluster_consumption/data/simulated_cluster_consumption_gco2_sep_to_feb.csv'
      energy_footprint: './services/cluster_consumption/data/simulated_cluster_consumption_wh_sep_to_feb.csv'
      financial_footprint: './services/cluster_consumption/data/simulated_cluster_consumption_usd_sep_to_feb.csv'
      # Guerre elec & ship identification service
      frequencies: './services/sensor/data/bandes_freq.csv'
      sensors_test_new: './services/theater_analysis/data/detections-capteur-donnees-test_new_scenario.csv'
      mission: './services/mission/data/mission.csv'
      radio: './services/theater_analysis/data/radio-maritime-donnees-tests_excel_light_militaire.csv'
      signal_identification_guide: './services/theorical_radio/data/Signal_identification_guide_new.csv'

  kubernetes:
    kube_config: '/home/fred-user/.kube/config'
    aws_config: '/home/fred-user/.aws/config' # Optional, needed for aws EKS clusters.
    # Timeout settings for the client
    timeout:
      connect: 5  # Time to wait for a connection in seconds
      read: 15    # Time to wait for a response in seconds

  ai:
    # Timeout settings for the client
    timeout:
      connect: 5  # Time to wait for a connection in seconds
      read: 15    # Time to wait for a response in seconds
    default_model:
      #provider: "ollama"
      #name: "llama2"
      provider: "openai"
      name: "gpt-4o"
      #provider: "azure"
      #name: "fred-gpt-4o"
      api_version: "2024-05-01-preview"
      temperature: 0.0
    leader:
      name: "Fred"
      class_path: "leader.leader.Leader"
      enabled: true
      max_steps: 5
      model: {}
    services:
      - name: "kubernetes"
        enabled: false
        model: {}
    recursion:
      recursion_limit: 40 #Number or max recursion use by the agents while using the model
    agents:
      - name: "JiraExpert"
        class_path: "agents.jira.jira_expert.JiraExpert"
        enabled: false
        mcp_servers:
          - name: jira-mcp-server
            transport: stdio
            command: uvx
            args:
              - "mcp-atlassian"
            env:
              JIRA_URL: "@TO_CHANGE"
              JIRA_USERNAME: "@TO_CHANGE"
              JIRA_API_TOKEN: "@TO_CHANGE"
              READ_ONLY_MODE: "true"
            sse_read_timeout: 600 # 10 minutes. It is 5 minutes by default but it is too short.
        model: {}
      - name: K8SOperatorExpert
        class_path: "agents.kubernetes_monitoring.k8s_operator_expert.K8SOperatorExpert"
        enabled: true
        mcp_servers:
          - name: k8s-mcp-server
            transport: sse
            url: http://mcp-server-k8s:8081/sse
            sse_read_timeout: 600 # 10 minutes. It is 5 minutes by default but it is too short.
          #######################################
          #### Example using STDIO transport ####
          #######################################
          # - name: prometheus-mcp-server
          #   transport: stdio
          #   command: uv
          #   args:
          #     - "--directory"
          #     - "/home/xxx/Documents/github_repos/prometheus-mcp-server"
          #     -  "run"
          #     -  "src/prometheus_mcp_server/main.py"
          #   env: 
          #     PROMETHEUS_URL: "http://localhost:9091"
        model: {}
      - name: "GeneralistExpert"
        class_path: "agents.generalist.generalist_expert.GeneralistExpert"
        enabled: true
        model: {}
      - name: "DocumentsExpert"
        class_path: "agents.documents.documents_expert.DocumentsExpert"
        enabled: true
        mcp_servers:
          - name: knowledge-flow-mcp-server
            transport: sse
            #url: http://knowledge-flow-backend:8111/mcp
            url: http://knowledge-flow-backend/mcp
            sse_read_timeout: 2000
        model: {}
      # The Monitoring expert requires you activate the 'enableK8Features' flags above
      - name: "MonitoringExpert"
        class_path: "agents.monitoring.monitoring_expert.MonitoringExpert"
        enabled: true
        categories:
          - "monitoring"
          - "observability"
        model: {}

  # Where to save fred produced resources like Essentials or Scores
  # and external resources like Kubernetes Workload descriptions
  dao:
    type: "file"  # Currently the only one supported
    base_path: "/home/fred-user/.fred/dao-cache"
    max_cached_delay_seconds: 300  # Cache delay in seconds. Use 0 for no cache or a negative value for limitless cache.

  # Enable or disable the security layer
  security:
    enabled: true
    keycloak_url: "http://keycloak/realms/app"
    authorized_origins:
    - "http://fred.dev.fred.thalesgroup.com"
    - "http://fred"

  # Environment variables for the application

  # AZURE
  azure:
    tenant_id: ""
    client_id: ""
    client_secret: ""
    client_scope: ""
    apim_key: ""
    api_version: ""
    deployment:
      llm: ""
      embedding: ""

  # CONTEXT STORAGE CONFIGURATION
  context_storage:
    type: "local"
    options:
      path: "/home/fred-user/.fred/context-store"

  feedback:
    db_host: postgres

  feedback_storage:
    type: local
    local_path: "/home/fred-user/.fred/feedback-store"

  node_metrics_storage:
    type: "local" 
    local_path:  "/home/fred-user/.fred/metrics-store"

  tool_metrics_storage:
    type: "local" 
    local_path: "/home/fred-user/.fred/metrics-store"

  session_storage:
    type: opensearch
    host: https://opensearch.dev.svc.cluster.local:9200
    # username: admin # Overrides the OPENSEARCH_USER env variable
    # password: xxx  # Overrides the OPENSEARCH_PASSWORD env variable
    secure: true
    verify_certs: false

dotenv:
  azure_tenant_id: ""
  azure_client_id: ""
  azure_client_secret: ""
  azure_client_scope: ""
  azure_api_version: "2024-06-01"
  azure_apim_base_url: "https://trustnest.azure-api.net"
  azure_resource_path_embeddings: "/genai-aoai-inference/v1"
  azure_resource_path_llm: "/genai-aoai-inference/v2"
  azure_apim_key: "your-subscription-key"
  azure_openai_endpoint: "https://your-azure-openai-resource.openai.azure.com"
  azure_openai_key: "your-real-azure-openai-api-key"
  azure_deployment_llm: "gpt-4o"
  azure_deployment_embedding: "text-embedding-ada-002"
  openai_api_key: "sk-..."
  openai_api_base: "https://api.openai.com/v1"
  openai_api_version: ""
  openai_model_name: "text-embedding-ada-002"
  keycloak_server_url: "http://keycloak.test"
  keycloak_realm_name: "app"
  keycloak_client_id: "app"
  local_context_storage_path: "/home/fred-user/.fred/context-store"
  local_metadata_storage_path: "/home/fred-user/.knowledge-flow/metadata-store.json"
  opensearch_user: "admin"
  opensearch_password: "Azerty123_"

kubeconfig:
  data:
    kubeconfig: |
      apiVersion: v1
      clusters:
      - cluster:
          certificate-authority-data: *****
          extensions:
          - extension:
              last-update: Tue, 10 Jun 2025 11:21:54 CEST
              provider: minikube.sigs.k8s.io
              version: v1.35.0
            name: cluster_info
          server: https://yyy.yyy.yyy.yyy:8443
        name: minikube
      contexts:
      - context:
          cluster: minikube
          extensions:
          - extension:
              last-update: Tue, 10 Jun 2025 11:21:54 CEST
              provider: minikube.sigs.k8s.io
              version: v1.35.0
            name: context_info
          namespace: default
          user: minikube
        name: minikube
      current-context: minikube
      kind: Config
      preferences: {}
      users:
      - name: minikube
        user:
          client-certificate-data: kkkkkk
          client-key-data: mmmmmmm